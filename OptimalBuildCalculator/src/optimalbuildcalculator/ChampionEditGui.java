/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package optimalbuildcalculator;

import java.util.LinkedList;
import javax.swing.DefaultListModel;
import optimalbuildcalculator.champion_stat_parts.Item;
import optimalbuildcalculator.champion_stat_parts.Stats;

/**
 *
 * @author Paris
 */
public class ChampionEditGui extends javax.swing.JFrame {

    /**
     * Creates new form ChampionEditGui
     */
    final Champion champion;
    LinkedList<Item> allitems;
    DefaultListModel m = new DefaultListModel();
    ChampionEditGui threadworkaround;

    public ChampionEditGui(Champion champion, LinkedList<Item> allitems) {
        this.champion = champion;
        this.allitems = allitems;
        threadworkaround = this;
        initComponents();
        champion_name.setText(champion.name);
        level.setValue(1);
        refresh();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventory = new javax.swing.JList();
        champion_name = new javax.swing.JTextField();
        level = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        health = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        attack_damage = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        attack_speed = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        critical_chance = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ability_power = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        armor = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        magic_resistance = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        jLabel7.setText("jLabel7");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Inventory");

        jScrollPane1.setViewportView(inventory);

        champion_name.setText("name");

        level.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                levelStateChanged(evt);
            }
        });

        jButton1.setText("Add Items");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(8, 2));

        jLabel8.setText("HP");
        jPanel1.add(jLabel8);

        health.setText("hp");
        jPanel1.add(health);

        jLabel3.setText("AD");
        jPanel1.add(jLabel3);

        attack_damage.setText("ad");
        jPanel1.add(attack_damage);

        jLabel4.setText("AS");
        jPanel1.add(jLabel4);

        attack_speed.setText("as");
        jPanel1.add(attack_speed);

        jLabel5.setText("Crit");
        jPanel1.add(jLabel5);

        critical_chance.setText("crit");
        jPanel1.add(critical_chance);

        jLabel6.setText("AP");
        jPanel1.add(jLabel6);

        ability_power.setText("ap");
        jPanel1.add(ability_power);

        jLabel9.setText("Armor");
        jPanel1.add(jLabel9);

        armor.setText("armor");
        jPanel1.add(armor);

        jLabel10.setText("MR");
        jPanel1.add(jLabel10);

        magic_resistance.setText("mr");
        jPanel1.add(magic_resistance);

        jLabel2.setText("LV");

        jButton2.setText("remove item");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(level, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(champion_name))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(champion_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(level, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void levelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_levelStateChanged
        if ((int) level.getValue() > 18) {
            level.setValue(18);
        }
        if ((int) level.getValue() < 1) {
            level.setValue(1);
        }
        refresh();
    }//GEN-LAST:event_levelStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        new Thread() {
            public void run() {
                ItemGui gui = new ItemGui(allitems, champion, threadworkaround);
                gui.setVisible(true);
            }
        }.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (inventory.getSelectedIndex() != -1) {
            champion.items.items.remove(inventory.getSelectedIndex());
            refresh();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ability_power;
    private javax.swing.JTextField armor;
    private javax.swing.JTextField attack_damage;
    private javax.swing.JTextField attack_speed;
    private javax.swing.JTextField champion_name;
    private javax.swing.JTextField critical_chance;
    private javax.swing.JTextField health;
    private javax.swing.JList inventory;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner level;
    private javax.swing.JTextField magic_resistance;
    // End of variables declaration//GEN-END:variables

    protected void refresh() {
        int championlevel = (int) level.getValue();
        health.setText(Float.toString(champion.get_total_stat(Stats.health, championlevel)));
        armor.setText(Float.toString(champion.get_total_stat(Stats.armor, championlevel)));
        magic_resistance.setText(Float.toString(champion.get_total_stat(Stats.magic_resistance, championlevel)));
        attack_damage.setText(Float.toString(champion.get_total_stat(Stats.attack_damage, championlevel)));
        attack_speed.setText(Float.toString(champion.get_total_stat(Stats.attack_speed, championlevel)));
        critical_chance.setText(Float.toString(champion.get_total_stat(Stats.critical_chance, championlevel)));
        ability_power.setText(Float.toString(champion.get_total_stat(Stats.ability_power, championlevel)));

        m = new DefaultListModel();
        System.out.println("champion has " + champion.items.items.size() + " items");
        for (Item i : champion.items.items) {
            m.addElement(i);
        }
        inventory.setModel(m);
    }
}
